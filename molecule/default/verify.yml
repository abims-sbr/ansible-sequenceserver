---
- name: Verify
  hosts: all
  become: true
  tasks:
    - name: Test blast installation
      shell: # noqa 301 305
        cmd: "/usr/local/anaconda/envs/blast/bin/blastn -version"
      register: blast_command
      failed_when: blast_command.rc > 0
    - name: Test my_db
      shell: # noqa 301 305
        cmd: "/usr/local/anaconda/envs/blast/bin/blastdbcmd -db /tmp/test-data/my_db -entry all"
      register: blastdbcmd_command
      failed_when: blastdbcmd_command.rc > 0
    - name: Ubuntu 18 | Test SequenceServer installation
      shell: # noqa 301
        cmd: "export GEM_PATH=/usr/local/share/gems && /usr/local/share/gems/bin/sequenceserver --version"
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
      register: sequenceserver_command
      failed_when: sequenceserver_command.rc > 0
    - name: Ubuntu 20 | Test SequenceServer installation
      shell: # noqa 301
        cmd: "export GEM_PATH=/usr/local/share/gems && /usr/local/share/gems/bin/sequenceserver --version"
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "20"
      register: sequenceserver_command
      failed_when: sequenceserver_command.rc > 0
    - name: Get SequenceServer service logs
      slurp:
        src: "/var/log/sequenceserver/sequenceserver.log"
      register: log
    - name: Display SequenceServer service logs
      debug:
        msg: "{{ log.content | b64decode }}"
    - name: Test that SequenceServer service is running for my_db
      systemd:
        name: sequenceserver-my_db.service
      register: service_result
      failed_when: service_result.status.SubState != 'running'
    - name: Test NGINX home page
      get_url:
        url: "http://localhost"
        dest: "/tmp/nginx.html"
    - name: Test SequenceServer home page with curl # same thing tried with the ansible get_url module without success
      shell: # noqa 301
        cmd: "curl -sL http://localhost:4567 -o /tmp/home.html"
      register: sequenceserver_command
      failed_when: sequenceserver_command.rc > 0
    - name: Get SequenceServer home page content
      slurp:
        src: "/tmp/home.html"
      register: sequenceserver_page
    - name: Display SequenceServer home page content
      debug:
        msg: "{{ sequenceserver_page.content | b64decode }}"
    - name: Check logo in home page content
      debug:
        msg: "{{ sequenceserver_page.content | b64decode | regex_findall(sequenceserver_logo) | first }}"
      register: grep_logo
      failed_when: grep_logo.rc > 0
    - name: Check title in home page content
      debug:
        msg: "{{ sequenceserver_page.content | b64decode | regex_findall('SequenceServer::WEB_PAGE_TITLE') | first }}"
      register: grep_title
      failed_when: grep_title.rc > 0
    - name: Check support email in home page content
      debug:
        msg: "{{ sequenceserver_page.content | b64decode | regex_findall(sequenceserver_support_email) | first }}"
      register: grep_support
      failed_when: grep_support.rc > 0
    - name: Check that the home page is rendering the values of the placeholders set for my_db
      debug:
        msg: "{{ sequenceserver_page.content | b64decode | regex_findall('<a href=\"http://testplaceholder.com\">my favorite link</a>') | first }}"
      register: grep_placeholder
      failed_when: grep_placeholder.rc > 0
    - name: Check custom html in home page content (top)
      debug:
        msg: "{{ sequenceserver_page.content | b64decode | regex_findall('My message') | first }}"
      register: grep_custom_html_top
      failed_when: grep_custom_html_top.rc > 0
    - name: Check custom html in home page content (bottom)
      debug:
        msg: "{{ sequenceserver_page.content | b64decode | regex_findall('Render custom string for this database') | first }}"
      register: grep_custom_html_bottom
      failed_when: grep_custom_html_bottom.rc > 0
